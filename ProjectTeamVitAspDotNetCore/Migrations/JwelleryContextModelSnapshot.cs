// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectTeamVitAspDotNetCore.Models;

namespace ProjectTeamVitAspDotNetCore.Migrations
{
    [DbContext(typeof(JwelleryContext))]
    partial class JwelleryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.Brand", b =>
                {
                    b.Property<string>("BrandId")
                        .HasColumnName("Brand_Id")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("BrandName")
                        .HasColumnName("Brand_Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("BrandId");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.Category", b =>
                {
                    b.Property<string>("IdCategory")
                        .HasColumnName("Id_Category")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("TypeName")
                        .HasColumnName("Type_Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("IdCategory");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.Certify", b =>
                {
                    b.Property<string>("CertifyId")
                        .HasColumnName("Certify_ID")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("CertifyType")
                        .HasColumnName("Certify_Type")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CertifyId");

                    b.ToTable("Certify");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.Color", b =>
                {
                    b.Property<string>("ColorId")
                        .HasColumnName("Color_Id")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ColorId");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.Dim", b =>
                {
                    b.Property<string>("DimId")
                        .HasColumnName("Dim_Id")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("Certify")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("DimAmt")
                        .HasColumnName("Dim_Amt")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<decimal?>("DimCrt")
                        .HasColumnName("Dim_Crt")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<decimal?>("DimGm")
                        .HasColumnName("Dim_Gm")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<decimal?>("DimPcs")
                        .HasColumnName("Dim_Pcs")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<decimal?>("DimRate")
                        .HasColumnName("Dim_Rate")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<decimal?>("DimSize")
                        .HasColumnName("Dim_Size")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("DimId");

                    b.ToTable("Dim");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.DimInfo", b =>
                {
                    b.Property<string>("DimInfoId")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DimCrt")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte[]>("DimImg")
                        .HasColumnType("image");

                    b.Property<decimal?>("DimPrice")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("DimSubType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DimType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DimInfoId");

                    b.ToTable("DimInfo");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.Metal", b =>
                {
                    b.Property<string>("MetalId")
                        .HasColumnName("Metal_Id")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("MetalCrt")
                        .HasColumnName("Metal_Crt")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("MetalId");

                    b.ToTable("Metal");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Birthday")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnName("Create_Time")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OdId")
                        .IsRequired()
                        .HasColumnName("od_id")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PdId")
                        .IsRequired()
                        .HasColumnName("pd_id")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnName("Total_Price")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("Id");

                    b.HasIndex("OdId");

                    b.HasIndex("PdId");

                    b.ToTable("Order_Detail");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.Product", b =>
                {
                    b.Property<string>("PdId")
                        .HasColumnName("pd_id")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BrandId")
                        .HasColumnName("Brand_id")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("ColorId")
                        .HasColumnName("Color_id")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DimId")
                        .HasColumnName("Dim_id")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("IdCategory")
                        .HasColumnName("Id_Category")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetalId")
                        .HasColumnName("Metal_id")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StoneId")
                        .HasColumnName("Stone_id")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.HasKey("PdId");

                    b.HasIndex("BrandId");

                    b.HasIndex("ColorId");

                    b.HasIndex("DimId");

                    b.HasIndex("IdCategory");

                    b.HasIndex("MetalId");

                    b.HasIndex("StoneId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("StringRole")
                        .HasColumnName("String_Role")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.Stone", b =>
                {
                    b.Property<string>("StoneId")
                        .HasColumnName("Stone_Id")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal?>("StoneAmt")
                        .HasColumnName("Stone_Amt")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<decimal?>("StoneCrt")
                        .HasColumnName("Stone_Crt")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<decimal?>("StoneGm")
                        .HasColumnName("Stone_Gm")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<decimal?>("StoneRate")
                        .HasColumnName("Stone_Rate")
                        .HasColumnType("numeric(10, 2)");

                    b.HasKey("StoneId");

                    b.ToTable("Stone");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Bdate")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ConfirmPassword")
                        .HasColumnName("Confirm_Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Eable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("IdRole")
                        .HasColumnName("Id_Role")
                        .HasColumnType("nchar(10)")
                        .HasDefaultValueSql("((4))")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ZipCode")
                        .HasColumnName("Zip_Code")
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true)
                        .HasMaxLength(50);

                    b.HasKey("Email");

                    b.HasIndex("IdRole");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.Order", b =>
                {
                    b.HasOne("ProjectTeamVitAspDotNetCore.Models.User", "EmailNavigation")
                        .WithMany("Order")
                        .HasForeignKey("Email")
                        .HasConstraintName("FK_Order_User");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.OrderDetail", b =>
                {
                    b.HasOne("ProjectTeamVitAspDotNetCore.Models.Order", "Od")
                        .WithMany("OrderDetail")
                        .HasForeignKey("OdId")
                        .HasConstraintName("FK_Order_Detail_Order")
                        .IsRequired();

                    b.HasOne("ProjectTeamVitAspDotNetCore.Models.Product", "Pd")
                        .WithMany("OrderDetail")
                        .HasForeignKey("PdId")
                        .HasConstraintName("FK_Order_Detail_Product")
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.Product", b =>
                {
                    b.HasOne("ProjectTeamVitAspDotNetCore.Models.Brand", "Brand")
                        .WithMany("Product")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK_Product_Brand");

                    b.HasOne("ProjectTeamVitAspDotNetCore.Models.Color", "Color")
                        .WithMany("Product")
                        .HasForeignKey("ColorId")
                        .HasConstraintName("FK_Product_Color");

                    b.HasOne("ProjectTeamVitAspDotNetCore.Models.Dim", "Dim")
                        .WithMany("Product")
                        .HasForeignKey("DimId")
                        .HasConstraintName("FK_Product_Dim");

                    b.HasOne("ProjectTeamVitAspDotNetCore.Models.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("FK_Product_Category");

                    b.HasOne("ProjectTeamVitAspDotNetCore.Models.Metal", "Metal")
                        .WithMany("Product")
                        .HasForeignKey("MetalId")
                        .HasConstraintName("FK_Product_Metal");

                    b.HasOne("ProjectTeamVitAspDotNetCore.Models.Stone", "Stone")
                        .WithMany("Product")
                        .HasForeignKey("StoneId")
                        .HasConstraintName("FK_Product_Stone");
                });

            modelBuilder.Entity("ProjectTeamVitAspDotNetCore.Models.User", b =>
                {
                    b.HasOne("ProjectTeamVitAspDotNetCore.Models.Role", "IdRoleNavigation")
                        .WithMany("User")
                        .HasForeignKey("IdRole")
                        .HasConstraintName("FK_User_Role");
                });
#pragma warning restore 612, 618
        }
    }
}
