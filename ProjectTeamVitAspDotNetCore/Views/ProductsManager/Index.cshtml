@model PaginatedList<ProjectTeamVitAspDotNetCore.Models.Product>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<form asp-controller="ProductsManager" asp-action="index">
    <input type="text" name="searchString" />
    <input type="submit" value="Search" />
    <a asp-controller="ProductsManager" asp-action="index">All</a>
</form>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Product
            </th>
            <th>
                @if (ViewBag.order == "price")
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"><i class="fas fa-sort-up">Price</i></a>
                }
                else if (ViewBag.order == "price_desc")
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"><i class="fas fa-sort-down">Price</i></a>
                }
                else
                {
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"><i class="fas fa-sort">Price</i></a>
                }

            </th>

            <th>
                Image
            </th>
            <th>
                Category
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <img src="~/Images/@Html.DisplayFor(modelItem => item.Image)" width="50px" height="50px" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdCategory)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.PdId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.PdId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.PdId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn-info btn btn-default @prevDisabled">
    Previous
</a>
@{
    double n = ViewBag.Count;
    double s = ViewBag.pageSize;
    double sn = Math.Ceiling(n / s);

    for (int i = 1; i <= sn; i++)
    {
        if (Model.PageIndex == i)
        {
            <a class="active btn btn-default btn-info">@i</a>
        }
        else
        {
            <a class="btn btn-default btn-info" asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-pageNumber="@i">@i</a>
        }
    }
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn-info btn btn-default @nextDisabled">
    Next
</a>

